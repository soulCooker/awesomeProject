package stack

/*
*
按照高的方式枚举所有可能的矩形，已位置i的柱子为高，向右扩散的过程中，维护一个单调递增的栈，对于高度<栈顶高度 且 当高度<=相等的柱子，可以直接忽略（其矩形与当前高度的矩形是一个）。
栈的元素包括，柱子的高度和柱子的位置。当找到第一个高度小于h(i)的柱子时或者到达数组末尾时，停止入栈操作，此时位置为j。

	初始化当前位置k为j
	此时，考虑[i,k]内的所有元素a，包含该元素的矩形面积为(k-a.pos)*a.height。
	对栈进行循环出栈
		计算矩形面积为(k-a.pos)*a.height
		如果大于当前矩形面积最大值，则更新

从j开始，继续出栈操作。
*
*/
func largestRectangleArea(heights []int) int {
	return 0
}
